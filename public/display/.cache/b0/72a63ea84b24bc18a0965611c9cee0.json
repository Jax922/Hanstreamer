{"id":"node_modules/@tensorflow-models/body-segmentation/body_pix/segmenter.js","dependencies":[{"name":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/body_pix/segmenter.js.map","includedInParent":true,"mtime":1701372084233},{"name":"/Users/shedong/Documents/dev/Hanstreamer/public/display/package.json","includedInParent":true,"mtime":1701375952532},{"name":"/Users/shedong/Documents/dev/Hanstreamer/public/display/.babelrc","includedInParent":true,"mtime":1701372126384},{"name":"../shared/calculators/mask_util","loc":{"line":40,"column":26},"parent":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/body_pix/segmenter.js","resolved":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/shared/calculators/mask_util.js"},{"name":"./impl","loc":{"line":41,"column":22},"parent":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/body_pix/segmenter.js","resolved":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/body_pix/impl/index.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = void 0;\nvar mask_util_1 = require(\"../shared/calculators/mask_util\");\nvar bodyPix = require(\"./impl\");\nvar BodyPixMask = /** @class */ (function () {\n    function BodyPixMask(mask) {\n        this.mask = mask;\n    }\n    BodyPixMask.prototype.toCanvasImageSource = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, mask_util_1.toHTMLCanvasElementLossy)(this.mask)];\n            });\n        });\n    };\n    BodyPixMask.prototype.toImageData = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.mask];\n            });\n        });\n    };\n    BodyPixMask.prototype.toTensor = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, (0, mask_util_1.toTensorLossy)(this.mask)];\n            });\n        });\n    };\n    BodyPixMask.prototype.getUnderlyingType = function () {\n        return 'imagedata';\n    };\n    return BodyPixMask;\n}());\nfunction singleMaskValueToLabel(maskValue) {\n    (0, mask_util_1.assertMaskValue)(maskValue);\n    if (maskValue !== 255) {\n        throw new Error(\"Foreground id must be 255 but got \" + maskValue);\n    }\n    return 'person';\n}\nfunction multiMaskValueToLabel(maskValue) {\n    (0, mask_util_1.assertMaskValue)(maskValue);\n    if (maskValue >= bodyPix.PART_CHANNELS.length) {\n        throw new Error(\"Invalid body part value \" + maskValue);\n    }\n    return bodyPix.PART_CHANNELS[maskValue];\n}\n/**\n * MediaPipe segmenter class.\n */\nvar BodyPixSegmenter = /** @class */ (function () {\n    // Should not be called outside.\n    function BodyPixSegmenter(model) {\n        this.bodyPixModel = model;\n    }\n    /**\n     * Segment people found in an image or video frame.\n     *\n     * It returns a single segmentation which contains all the detected people\n     * in the input.\n     *\n     * @param input\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\n     * image to feed through the network.\n     *\n     * @param config Optional.\n     *       flipHorizontal: Optional. Default to false. When image data comes\n     *       from camera, the result has to flip horizontally.\n     *\n     * @return An array of one `Segmentation`.\n     */\n    BodyPixSegmenter.prototype.segmentPeople = function (input, segmentationConfig) {\n        return __awaiter(this, void 0, void 0, function () {\n            var canvas, segmentations, partSegmentations, _a, singleSegmentations, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (input instanceof ImageBitmap) {\n                            canvas = document.createElement('canvas');\n                            canvas.getContext('2d').drawImage(input, 0, 0);\n                            input = canvas;\n                        }\n                        if (!segmentationConfig.segmentBodyParts) return [3 /*break*/, 5];\n                        if (!segmentationConfig.multiSegmentation) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.bodyPixModel.segmentMultiPersonParts(input, segmentationConfig)];\n                    case 1:\n                        _a = _c.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.bodyPixModel.segmentPersonParts(input, segmentationConfig)];\n                    case 3:\n                        _a = [_c.sent()];\n                        _c.label = 4;\n                    case 4:\n                        partSegmentations = _a;\n                        segmentations = partSegmentations.map(function (partSegmentation) {\n                            var data = partSegmentation.data, width = partSegmentation.width, height = partSegmentation.height;\n                            var rgbaData = new Uint8ClampedArray(width * height * 4).fill(0);\n                            data.forEach(function (bodyPartLabel, i) {\n                                // Background.\n                                if (bodyPartLabel === -1) {\n                                    rgbaData[i * 4] = bodyPix.PART_CHANNELS.length;\n                                    rgbaData[i * 4 + 3] = 0;\n                                }\n                                else {\n                                    rgbaData[i * 4] = bodyPartLabel;\n                                    rgbaData[i * 4 + 3] = 255;\n                                }\n                            });\n                            return {\n                                maskValueToLabel: multiMaskValueToLabel,\n                                mask: new BodyPixMask(new ImageData(rgbaData, width, height)),\n                            };\n                        });\n                        return [3 /*break*/, 10];\n                    case 5:\n                        if (!segmentationConfig.multiSegmentation) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.bodyPixModel.segmentMultiPerson(input, segmentationConfig)];\n                    case 6:\n                        _b = _c.sent();\n                        return [3 /*break*/, 9];\n                    case 7: return [4 /*yield*/, this.bodyPixModel.segmentPerson(input, segmentationConfig)];\n                    case 8:\n                        _b = [_c.sent()];\n                        _c.label = 9;\n                    case 9:\n                        singleSegmentations = _b;\n                        segmentations = singleSegmentations.map(function (singleSegmentation) {\n                            var data = singleSegmentation.data, width = singleSegmentation.width, height = singleSegmentation.height;\n                            var rgbaData = new Uint8ClampedArray(width * height * 4).fill(0);\n                            data.forEach(function (bodyPartLabel, i) {\n                                // Background.\n                                if (bodyPartLabel === 0) {\n                                    rgbaData[i * 4] = 0;\n                                    rgbaData[i * 4 + 3] = 0;\n                                }\n                                else {\n                                    rgbaData[i * 4] = 255;\n                                    rgbaData[i * 4 + 3] = 255;\n                                }\n                            });\n                            return {\n                                maskValueToLabel: singleMaskValueToLabel,\n                                mask: new BodyPixMask(new ImageData(rgbaData, width, height)),\n                            };\n                        });\n                        _c.label = 10;\n                    case 10: return [2 /*return*/, segmentations];\n                }\n            });\n        });\n    };\n    BodyPixSegmenter.prototype.dispose = function () {\n        this.bodyPixModel.dispose();\n    };\n    BodyPixSegmenter.prototype.reset = function () { };\n    return BodyPixSegmenter;\n}());\n/**\n * Loads the BodyPix solution.\n *\n * @param modelConfig An object that contains parameters for\n * the BodyPix loading process. Please find more details of\n * each parameters in the documentation of the\n * `BodyPixModelConfig` interface.\n */\nfunction load(modelConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, bodyPix.load(modelConfig).then(function (model) { return new BodyPixSegmenter(model); })];\n        });\n    });\n}\nexports.load = load;\n"},"sourceMaps":{"js":{"version":3,"file":"segmenter.js","sourceRoot":"","sources":["../../src/body_pix/segmenter.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"b0195b010145992a61b6cdb36c17508e","cacheData":{"env":{}}}