{"id":"node_modules/@tensorflow-models/body-segmentation/selfie_segmentation_tfjs/segmenter_utils.js","dependencies":[{"name":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/selfie_segmentation_tfjs/segmenter_utils.js.map","includedInParent":true,"mtime":1701372084305},{"name":"/Users/shedong/Documents/dev/Hanstreamer/public/display/package.json","includedInParent":true,"mtime":1701375952532},{"name":"/Users/shedong/Documents/dev/Hanstreamer/public/display/.babelrc","includedInParent":true,"mtime":1701372126384},{"name":"./constants","loc":{"line":31,"column":26},"parent":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/selfie_segmentation_tfjs/segmenter_utils.js","resolved":"/Users/shedong/Documents/dev/Hanstreamer/public/display/node_modules/@tensorflow-models/body-segmentation/selfie_segmentation_tfjs/constants.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSegmentationConfig = exports.validateModelConfig = void 0;\nvar constants_1 = require(\"./constants\");\nfunction validateModelConfig(modelConfig) {\n    if (modelConfig == null) {\n        return __assign({}, constants_1.DEFAULT_TFJS_SELFIE_SEGMENTATION_MODEL_CONFIG);\n    }\n    var config = __assign({}, modelConfig);\n    config.runtime = 'tfjs';\n    if (config.modelType == null) {\n        config.modelType = constants_1.DEFAULT_TFJS_SELFIE_SEGMENTATION_MODEL_CONFIG.modelType;\n    }\n    if (config.modelType !== 'general' && config.modelType !== 'landscape') {\n        throw new Error(\"Model type must be one of general or landscape, but got \" + config.modelType);\n    }\n    if (config.modelUrl == null) {\n        switch (config.modelType) {\n            case 'general':\n                config.modelUrl = constants_1.DEFAULT_TFJS_SELFIE_SEGMENTATION_MODEL_URL_GENERAL;\n                break;\n            case 'landscape':\n            default:\n                config.modelUrl = constants_1.DEFAULT_TFJS_SELFIE_SEGMENTATION_MODEL_URL_LANDSCAPE;\n                break;\n        }\n    }\n    return config;\n}\nexports.validateModelConfig = validateModelConfig;\nfunction validateSegmentationConfig(segmentationConfig) {\n    if (segmentationConfig == null) {\n        return __assign({}, constants_1.DEFAULT_TFJS_SELFIE_SEGMENTATION_SEGMENTATION_CONFIG);\n    }\n    var config = __assign({}, segmentationConfig);\n    if (config.flipHorizontal == null) {\n        config.flipHorizontal =\n            constants_1.DEFAULT_TFJS_SELFIE_SEGMENTATION_SEGMENTATION_CONFIG.flipHorizontal;\n    }\n    return config;\n}\nexports.validateSegmentationConfig = validateSegmentationConfig;\n"},"sourceMaps":{"js":{"version":3,"file":"segmenter_utils.js","sourceRoot":"","sources":["../../src/selfie_segmentation_tfjs/segmenter_utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;;AAEH,yCAA0O;AAG1O,SAAgB,mBAAmB,CAC/B,WAAuD;IAEzD,IAAI,WAAW,IAAI,IAAI,EAAE;QACvB,oBAAW,yDAA6C,EAAE;KAC3D;IAED,IAAM,MAAM,gBAAmD,WAAW,CAAC,CAAC;IAE5E,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;IAExB,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE;QAC5B,MAAM,CAAC,SAAS,GAAG,yDAA6C,CAAC,SAAS,CAAC;KAC5E;IAED,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,KAAK,WAAW,EAAE;QACtE,MAAM,IAAI,KAAK,CAAC,6DACZ,MAAM,CAAC,SAAW,CAAC,CAAC;KACzB;IAED,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,EAAE;QAC3B,QAAQ,MAAM,CAAC,SAAS,EAAE;YACxB,KAAK,SAAS;gBACZ,MAAM,CAAC,QAAQ,GAAG,8DAAkD,CAAC;gBACrE,MAAM;YACR,KAAK,WAAW,CAAC;YACjB;gBACE,MAAM,CAAC,QAAQ,GAAG,gEAAoD,CAAC;gBACvE,MAAM;SACT;KACF;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAjCD,kDAiCC;AAED,SAAgB,0BAA0B,CACtC,kBAAqE;IAEvE,IAAI,kBAAkB,IAAI,IAAI,EAAE;QAC9B,oBAAW,gEAAoD,EAAE;KAClE;IAED,IAAM,MAAM,gBAAO,kBAAkB,CAAC,CAAC;IAEvC,IAAI,MAAM,CAAC,cAAc,IAAI,IAAI,EAAE;QACjC,MAAM,CAAC,cAAc;YACjB,gEAAoD,CAAC,cAAc,CAAC;KACzE;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAfD,gEAeC","sourcesContent":[null]}},"error":null,"hash":"1a81f2cd4697ec34a415713da871a7f3","cacheData":{"env":{}}}