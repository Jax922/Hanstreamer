{"id":"node_modules/@tensorflow-models/body-segmentation/body_pix/impl/keypoints.js","dependencies":[{"name":"/Users/shedong/Documents/dev/display/node_modules/@tensorflow-models/body-segmentation/body_pix/impl/keypoints.js.map","includedInParent":true,"mtime":1701372084150},{"name":"/Users/shedong/Documents/dev/display/package.json","includedInParent":true,"mtime":1701373985473},{"name":"/Users/shedong/Documents/dev/display/.babelrc","includedInParent":true,"mtime":1701372126384}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECTED_PART_INDICES = exports.POSE_CHAIN = exports.PART_IDS = exports.NUM_KEYPOINTS = exports.PART_NAMES = void 0;\nexports.PART_NAMES = [\n    'nose', 'leftEye', 'rightEye', 'leftEar', 'rightEar', 'leftShoulder',\n    'rightShoulder', 'leftElbow', 'rightElbow', 'leftWrist', 'rightWrist',\n    'leftHip', 'rightHip', 'leftKnee', 'rightKnee', 'leftAnkle', 'rightAnkle'\n];\nexports.NUM_KEYPOINTS = exports.PART_NAMES.length;\nexports.PART_IDS = exports.PART_NAMES.reduce(function (result, jointName, i) {\n    result[jointName] = i;\n    return result;\n}, {});\nvar CONNECTED_PART_NAMES = [\n    ['leftHip', 'leftShoulder'], ['leftElbow', 'leftShoulder'],\n    ['leftElbow', 'leftWrist'], ['leftHip', 'leftKnee'],\n    ['leftKnee', 'leftAnkle'], ['rightHip', 'rightShoulder'],\n    ['rightElbow', 'rightShoulder'], ['rightElbow', 'rightWrist'],\n    ['rightHip', 'rightKnee'], ['rightKnee', 'rightAnkle'],\n    ['leftShoulder', 'rightShoulder'], ['leftHip', 'rightHip']\n];\n/*\n * Define the skeleton. This defines the parent->child relationships of our\n * tree. Arbitrarily this defines the nose as the root of the tree, however\n * since we will infer the displacement for both parent->child and\n * child->parent, we can define the tree root as any node.\n */\nexports.POSE_CHAIN = [\n    ['nose', 'leftEye'], ['leftEye', 'leftEar'], ['nose', 'rightEye'],\n    ['rightEye', 'rightEar'], ['nose', 'leftShoulder'],\n    ['leftShoulder', 'leftElbow'], ['leftElbow', 'leftWrist'],\n    ['leftShoulder', 'leftHip'], ['leftHip', 'leftKnee'],\n    ['leftKnee', 'leftAnkle'], ['nose', 'rightShoulder'],\n    ['rightShoulder', 'rightElbow'], ['rightElbow', 'rightWrist'],\n    ['rightShoulder', 'rightHip'], ['rightHip', 'rightKnee'],\n    ['rightKnee', 'rightAnkle']\n];\nexports.CONNECTED_PART_INDICES = CONNECTED_PART_NAMES.map(function (_a) {\n    var jointNameA = _a[0], jointNameB = _a[1];\n    return ([exports.PART_IDS[jointNameA], exports.PART_IDS[jointNameB]]);\n});\n"},"sourceMaps":{"js":{"version":3,"file":"keypoints.js","sourceRoot":"","sources":["../../../src/body_pix/impl/keypoints.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;AAMU,QAAA,UAAU,GAAG;IACxB,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc;IACpE,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY;IACrE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY;CAC1E,CAAC;AAEW,QAAA,aAAa,GAAG,kBAAU,CAAC,MAAM,CAAC;AAMlC,QAAA,QAAQ,GACjB,kBAAU,CAAC,MAAM,CAAC,UAAC,MAAkB,EAAE,SAAS,EAAE,CAAC;IACjD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACtB,OAAO,MAAM,CAAC;AAChB,CAAC,EAAE,EAAE,CAAC,CAAC;AAEX,IAAM,oBAAoB,GAAkB;IAC1C,CAAC,SAAS,EAAE,cAAc,CAAC,EAAE,CAAC,WAAW,EAAE,cAAc,CAAC;IAC1D,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IACnD,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,eAAe,CAAC;IACxD,CAAC,YAAY,EAAE,eAAe,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;IAC7D,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;IACtD,CAAC,cAAc,EAAE,eAAe,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;CAC3D,CAAC;AAEF;;;;;GAKG;AACU,QAAA,UAAU,GAAkB;IACvC,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;IACjE,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,cAAc,CAAC;IAClD,CAAC,cAAc,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;IACzD,CAAC,cAAc,EAAE,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IACpD,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE,CAAC,MAAM,EAAE,eAAe,CAAC;IACpD,CAAC,eAAe,EAAE,YAAY,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;IAC7D,CAAC,eAAe,EAAE,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;IACxD,CAAC,WAAW,EAAE,YAAY,CAAC;CAC5B,CAAC;AAEW,QAAA,sBAAsB,GAAG,oBAAoB,CAAC,GAAG,CAC1D,UAAC,EAAwB;QAAvB,UAAU,QAAA,EAAE,UAAU,QAAA;IACpB,OAAA,CAAC,CAAC,gBAAQ,CAAC,UAAU,CAAC,EAAE,gBAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AAA9C,CAA8C,CAAC,CAAC","sourcesContent":[null]}},"error":null,"hash":"5b4867e5f07f8eb29134c49e4bdd92e9","cacheData":{"env":{}}}